// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PokeDeckContainer Should match the snap shot if there is not any types 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PokeDeckContainer
    setTypes={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      }
    }
    types={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          src="../../../public/pikachu.gif"
        />,
        <Lists
          pokemons={undefined}
        />,
      ],
      "className": "PokeDeckContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "src": "../../../public/pikachu.gif",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "pokemons": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            src="../../../public/pikachu.gif"
          />,
          <Lists
            pokemons={undefined}
          />,
        ],
        "className": "PokeDeckContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": "../../../public/pikachu.gif",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "pokemons": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PokeDeckContainer Should match the snapshot if the types have length 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PokeDeckContainer
    setTypes={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      }
    }
    types={
      Array [
        Object {
          "id": "1",
          "name": "normal",
          "pokemon": Array [
            "16",
            "17",
          ],
        },
        Object {
          "id": "2",
          "name": "fighting",
          "pokemon": Array [
            "56",
            "57",
            "66",
          ],
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <Card
            getPokemonInfo={[Function]}
            type={
              Object {
                "id": "1",
                "name": "normal",
                "pokemon": Array [
                  "16",
                  "17",
                ],
              }
            }
          />,
          <Card
            getPokemonInfo={[Function]}
            type={
              Object {
                "id": "2",
                "name": "fighting",
                "pokemon": Array [
                  "56",
                  "57",
                  "66",
                ],
              }
            }
          />,
        ],
        <Lists
          pokemons={undefined}
        />,
      ],
      "className": "PokeDeckContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "getPokemonInfo": [Function],
          "type": Object {
            "id": "1",
            "name": "normal",
            "pokemon": Array [
              "16",
              "17",
            ],
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "getPokemonInfo": [Function],
          "type": Object {
            "id": "2",
            "name": "fighting",
            "pokemon": Array [
              "56",
              "57",
              "66",
            ],
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "pokemons": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <Card
              getPokemonInfo={[Function]}
              type={
                Object {
                  "id": "1",
                  "name": "normal",
                  "pokemon": Array [
                    "16",
                    "17",
                  ],
                }
              }
            />,
            <Card
              getPokemonInfo={[Function]}
              type={
                Object {
                  "id": "2",
                  "name": "fighting",
                  "pokemon": Array [
                    "56",
                    "57",
                    "66",
                  ],
                }
              }
            />,
          ],
          <Lists
            pokemons={undefined}
          />,
        ],
        "className": "PokeDeckContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "getPokemonInfo": [Function],
            "type": Object {
              "id": "1",
              "name": "normal",
              "pokemon": Array [
                "16",
                "17",
              ],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "getPokemonInfo": [Function],
            "type": Object {
              "id": "2",
              "name": "fighting",
              "pokemon": Array [
                "56",
                "57",
                "66",
              ],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "pokemons": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
